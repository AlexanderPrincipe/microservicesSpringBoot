package com.example.demo.controller;

import java.io.Console;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.example.demo.entity.User;
import com.example.demo.model.Bike;
import com.example.demo.model.Car;
import com.example.demo.service.UserService;

@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	UserService userService;
	
	@Autowired
	RestTemplate restTemplate;
	
	@GetMapping
	public ResponseEntity<List<User>> getAll() {
		List<User> users = userService.getAll();
		if(users.isEmpty()) 
			return ResponseEntity.noContent().build();
		return ResponseEntity.ok(users);
		
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<User> getUserById(@PathVariable("id") int id) {
		User user = userService.getUserById(id);
		if(user == null)
			return ResponseEntity.notFound().build();
		return ResponseEntity.ok(user);
		
	}
	
	@PostMapping()
	public User save(@RequestBody User user) {
		return userService.registrar(user);
	}
	
	@GetMapping("/cars/{userId}")
	public ResponseEntity<List<Car>> getCars(@PathVariable("userId") int userId) {
		System.out.println("OBTENER CARS");	
		User user = userService.getUserById(userId);
		
		if (user == null) 
			return ResponseEntity.notFound().build();
		List<Car> cars = userService.getCars(userId);
		System.out.println("USER");	
		System.out.println(user.getName());	
		System.out.println("--------");
		System.out.println(cars);	
		return ResponseEntity.ok(cars);
	}
	
	@GetMapping("/bikes/{userId}")
	public ResponseEntity<List<Bike>> getBikes(@PathVariable("userId") int userId) {
		System.out.println("OBTENER BIKES");	
		User user = userService.getUserById(userId);
		if (user == null) 
			return ResponseEntity.notFound().build();
		List<Bike> bikes = userService.getBikes(userId);
		System.out.println("--------");
		System.out.println(bikes);	
		return ResponseEntity.ok(bikes); 
	}
	

    @GetMapping("/prueba/{id}")
    public ResponseEntity<List<Bike>> get(@PathVariable Long id) {
    	List<Bike> bikes = (List<Bike>) restTemplate.getForObject("http://localhost:8003/bike/byUserId/" + id, Bike.class);
    	for (Bike bike: bikes) {
    		System.out.println(bike);
    	}
        return ResponseEntity.ok(bikes);
    }

}
